name: FriendlyWrt-22.03
on:
  watch:
    types: started
jobs:
  prepare_release:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id
    steps:
    - name: Get Release Tag
      id: release_tag
      run: |
        release_tag="FriendlyWrt-$(date +%Y-%m-%d)"
        echo "##[set-output name=release_tag;]$release_tag"

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.release_tag.outputs.release_tag }}
        draft: false
        prerelease: false
    outputs:
      release_tag: ${{ steps.release_tag.outputs.release_tag }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}

  prepare_friendlywrt22_rootfs:
    needs: prepare_release
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        DOCKER: [yes, no]
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d
        wget https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh
        sed -i -e 's/^apt-get -y install openjdk-8-jdk/# apt-get -y install openjdk-8-jdk/g' install.sh
        sed -i -e 's/^\[ -d fa-toolchain \]/# [ -d fa-toolchain ]/g' install.sh
        sed -i -e 's/^cat fa-toolchain/# cat fa-toolchain/g' install.sh
        sudo -E bash ./install.sh
        sudo -E update-alternatives --install $(which python) python /usr/bin/python2.7 20
        sudo -E git config --global user.name 'GitHub Actions'
        sudo -E git config --global user.email 'noreply@github.com'
        git clone https://github.com/friendlyarm/repo
        sudo -E cp repo/repo /usr/bin/
        mkdir -p ./artifact
        sudo swapoff -a
        sudo rm -rf /usr/share/dotnet /usr/local/lib/android/sdk /usr/local/share/boost /opt/ghc

    - name: Download Source
      run: |
        mkdir project
        cd project
        repo init --depth=1 -u https://github.com/friendlyarm/friendlywrt_manifests -b master-v22.03 \
                -m rk3399.xml --repo-url=https://github.com/friendlyarm/repo  --no-clone-bundle

        repo sync -c friendlywrt --no-clone-bundle
        repo sync -c configs --no-clone-bundle
        repo sync -c device/common --no-clone-bundle
        repo sync -c device/friendlyelec --no-clone-bundle
        repo sync -c scripts --no-clone-bundle
        repo sync -c scripts/sd-fuse  --no-clone-bundle
        repo sync -c toolchain  --no-clone-bundle

    - name: Apply Customizations
      run: |
        cd project
        source ../scripts/add_packages.sh
        source ../scripts/custome_config.sh

    - name: Prepare Config and Feeds
      run: |
        cd project
        if [ "${{ matrix.DOCKER }}" == "yes" ]; then
          cat > .current_config.mk <<EOL
          . device/friendlyelec/rk3399/base.mk
          TARGET_IMAGE_DIRNAME=friendlywrt22-docker
          TARGET_FRIENDLYWRT_CONFIG=rockchip-docker
        EOL
        else
          cat > .current_config.mk <<EOL
          . device/friendlyelec/rk3399/base.mk
          TARGET_IMAGE_DIRNAME=friendlywrt22
          TARGET_FRIENDLYWRT_CONFIG=rockchip
        EOL
        fi
        DEBUG_DOT_CONFIG=1 ./build.sh friendlywrt

    - name: Enable Cache
      uses: HiGarfield/cachewrtbuild@main
      with:
        mixkey: ${{ github.workflow }}
        prefix: ${{ github.workspace }}/project/friendlywrt

    - name: Download Package
      run: |
        cd project/friendlywrt
        # make download -j8
        # find dl -size -1024c -exec ls -l {} \;
        # find dl -size -1024c -exec rm -f {} \;

    - name: Compile FriendlyWrt
      id: compile
      continue-on-error: true
      run: |
        # cd project/friendlywrt
        # make -j$[`nproc` + 1] || make -j1 V=s
        echo $?

    - name: Check The Result And Try Again
      if: steps.compile.outcome == 'failure'
      run: |
        cd project/friendlywrt
        # make -j1 V=s

    - name: Create Rootfs Package
      id: create_rootfs_package
      run: |
        cd project
        source .current_config.mk
        mkdir -p ${FRIENDLYWRT_SRC}/${FRIENDLYWRT_ROOTFS}  #todo
        if [ "${{ matrix.DOCKER }}" == "yes" ]; then
          rootfs_filename="rootfs-friendlywrt-22.03-docker.tgz"
        else
          rootfs_filename="rootfs-friendlywrt-22.03.tgz"
        fi
        tar cvzf ../artifact/${rootfs_filename} ${FRIENDLYWRT_SRC}/${FRIENDLYWRT_ROOTFS}
        echo "##[set-output name=rootfs_filename;]$rootfs_filename"
        tree ../artifact/

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.prepare_release.outputs.upload_url }}
        asset_path: ./artifact/${{ steps.create_rootfs_package.outputs.rootfs_filename }}
        asset_name: ${{ steps.create_rootfs_package.outputs.rootfs_filename }}
        asset_content_type: application/gzip

  build:
    needs: [prepare_release,prepare_friendlywrt22_rootfs]
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id

    strategy:
      matrix:
        CPU: [rk3328, rk3399, rk3568]
        DOCKER: [yes, no]
    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d
        wget https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh
        sed -i -e 's/^apt-get -y install openjdk-8-jdk/# apt-get -y install openjdk-8-jdk/g' install.sh
        sed -i -e 's/^\[ -d fa-toolchain \]/# [ -d fa-toolchain ]/g' install.sh
        sed -i -e 's/^cat fa-toolchain/# cat fa-toolchain/g' install.sh
        sudo -E bash ./install.sh
        sudo -E update-alternatives --install $(which python) python /usr/bin/python2.7 20
        sudo -E git config --global user.name 'GitHub Actions'
        sudo -E git config --global user.email 'noreply@github.com'
        git clone https://github.com/friendlyarm/repo
        sudo -E cp repo/repo /usr/bin/
        mkdir -p ./artifact
        sudo swapoff -a
        sudo rm -rf /usr/share/dotnet /usr/local/lib/android/sdk /usr/local/share/boost /opt/ghc

    - name: Download Source
      run: |
        mkdir project
        cd project
        repo init --depth=1 -u https://github.com/friendlyarm/friendlywrt_manifests -b master-v22.03 \
                -m ${{ matrix.CPU }}.xml --repo-url=https://github.com/friendlyarm/repo  --no-clone-bundle

        repo sync -c kernel --no-clone-bundle
        repo sync -c u-boot --no-clone-bundle
        repo sync -c configs --no-clone-bundle
        repo sync -c device/common --no-clone-bundle
        repo sync -c device/friendlyelec --no-clone-bundle
        repo sync -c scripts --no-clone-bundle
        repo sync -c scripts/sd-fuse  --no-clone-bundle
        repo sync -c toolchain  --no-clone-bundle

    - name: Download FriendlyWrt Rootfs
      if: matrix.DOCKER == 'no'
      uses: robinraju/release-downloader@v1.5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        repository: "lawrencetg/Actions-FriendlyWrt-Test"
        tag: ${{ needs.prepare_release.outputs.release_tag }}
        fileName: "rootfs-friendlywrt-22.03.tgz"

    - name: Download FriendlyWrt Rootfs (Docker)
      if: matrix.DOCKER == 'yes'
      uses: robinraju/release-downloader@v1.5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        repository: "lawrencetg/Actions-FriendlyWrt-Test"
        tag: ${{ needs.prepare_release.outputs.release_tag }}
        fileName: "rootfs-friendlywrt-22.03-docker.tgz"

    - name: Prepare Config
      run: |
        cd project
        if [ "${{ matrix.DOCKER }}" == "yes" ]; then
          cat > .current_config.mk <<EOL
          . device/friendlyelec/rk3399/base.mk
          TARGET_IMAGE_DIRNAME=friendlywrt22-docker
          TARGET_FRIENDLYWRT_CONFIG=rockchip-docker
        EOL
        else
          cat > .current_config.mk <<EOL
          . device/friendlyelec/rk3399/base.mk
          TARGET_IMAGE_DIRNAME=friendlywrt22
          TARGET_FRIENDLYWRT_CONFIG=rockchip
        EOL
        fi

    - name: Unpack FriendlyWrt Rootfs
      run: |
        cd project
        if [ "${{ matrix.DOCKER }}" == "yes" ]; then
          tar xvzf "../rootfs-friendlywrt-22.03-docker.tgz"
        else
          tar xvzf "../rootfs-friendlywrt-22.03.tgz"
        fi

    - name: Compile Uboot and Kernel
      run: |
        cd project
        # ./build.sh kernel
        # ./build.sh uboot

    - name: Build SD Image
      id: build_sd_image
      run: |
        rm 1.tgz
        tar cvzf 1.tgz project
        suffix=
        if [ "${{ matrix.DOCKER }}" == "yes" ]; then
          suffix="-Docker"
        fi
        img_filename=${{ matrix.DOCKER }}-FriendlyWrt-22.03${suffix}.img
        cp 1.tgz artifact/${img_filename}
        rm 1.tgz

        cd project
        # ./build.sh sd-img
        # mv out/${img_filename} ../artifact/
        cd ../artifact/
        gzip *.img
        echo "##[set-output name=img_filename;]$img_filename"

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.prepare_release.outputs.upload_url }}
        asset_path: ./artifact/${{ steps.build_sd_image.img_filename }}.gz
        asset_name: ${{ steps.build_sd_image.img_filename }}.gz
        asset_content_type: application/gzip


